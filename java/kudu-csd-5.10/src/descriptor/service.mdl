{
    "metricEntityTypeDefinitions": [
        {
            "mutableAttributeNames": [
                "kuduTableName",
                "kuduTableState"
            ],
            "description": "A Kudu table.",
            "labelPlural": "Kudu Tables",
            "parentMetricEntityTypeNames": [
                "KUDU"
            ],
            "metricDefinitions": [],
            "entityNameFormat": [
                "serviceName",
                "kuduTableId"
            ],
            "immutableAttributeNames": [
                "serviceName",
                "kuduTableId"
            ],
            "entityLabelFormat": "$kuduTableName ($serviceDisplayName)",
            "label": "Kudu Table",
            "nameForCrossEntityAggregateMetrics": "kudu_tables",
            "name": "KUDU_TABLE"
        },
        {
            "mutableAttributeNames": [
                "kuduTabletState"
            ],
            "description": "A Kudu tablet.",
            "labelPlural": "Kudu Tablets",
            "parentMetricEntityTypeNames": [
                "KUDU_TABLE"
            ],
            "metricDefinitions": [],
            "entityNameFormat": [
                "serviceName",
                "kuduTabletId"
            ],
            "immutableAttributeNames": [
                "serviceName",
                "kuduTableId",
                "kuduTabletId"
            ],
            "entityLabelFormat": "$kuduTabletId ($kuduTableName) ($serviceDisplayName)",
            "label": "Kudu Tablet",
            "nameForCrossEntityAggregateMetrics": "kudu_tablets",
            "name": "KUDU_TABLET"
        },
        {
            "labelPlural": "Kudu Replicas",
            "description": "A Kudu replica.",
            "parentMetricEntityTypeNames": [
                "KUDU_TABLET",
                "KUDU-KUDU_TSERVER"
            ],
            "metricDefinitions": [
                {
                    "numeratorUnit": "bytes",
                    "description": "Data read from the WAL since tablet start",
                    "context": "log_reader_bytes_read::value",
                    "name": "kudu_log_reader_bytes_read",
                    "counter": true,
                    "label": "Bytes Read From Log"
                },
                {
                    "numeratorUnit": "entries",
                    "description": "Number of entries read from the WAL since tablet start",
                    "context": "log_reader_entries_read::value",
                    "name": "kudu_log_reader_entries_read",
                    "counter": true,
                    "label": "Entries Read From Log"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent reading log entry batches. This is the total number of recorded samples.",
                    "context": "log_reader_read_batch_latency::total_count",
                    "name": "kudu_log_reader_read_batch_latency_count",
                    "counter": true,
                    "label": "Log Read Latency: Samples"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Microseconds spent reading log entry batches. This is the total sum of recorded samples.",
                    "context": "log_reader_read_batch_latency::total_sum",
                    "name": "kudu_log_reader_read_batch_latency_sum",
                    "counter": true,
                    "label": "Log Read Latency: Total"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Number of bytes logged since service start",
                    "context": "log_bytes_logged::value",
                    "name": "kudu_log_bytes_logged",
                    "counter": true,
                    "label": "Bytes Written to WAL"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent on synchronizing the log segment file. This is the total number of recorded samples.",
                    "context": "log_sync_latency::total_count",
                    "name": "kudu_log_sync_latency_count",
                    "counter": true,
                    "label": "Log Sync Latency: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent on synchronizing the log segment file. This is the total sum of recorded samples.",
                    "context": "log_sync_latency::total_sum",
                    "name": "kudu_log_sync_latency_sum",
                    "counter": true,
                    "label": "Log Sync Latency: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent on appending to the log segment file. This is the total number of recorded samples.",
                    "context": "log_append_latency::total_count",
                    "name": "kudu_log_append_latency_count",
                    "counter": true,
                    "label": "Log Append Latency: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent on appending to the log segment file. This is the total sum of recorded samples.",
                    "context": "log_append_latency::total_sum",
                    "name": "kudu_log_append_latency_sum",
                    "counter": true,
                    "label": "Log Append Latency: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent on committing an entire group. This is the total number of recorded samples.",
                    "context": "log_group_commit_latency::total_count",
                    "name": "kudu_log_group_commit_latency_count",
                    "counter": true,
                    "label": "Log Group Commit Latency: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent on committing an entire group. This is the total sum of recorded samples.",
                    "context": "log_group_commit_latency::total_sum",
                    "name": "kudu_log_group_commit_latency_sum",
                    "counter": true,
                    "label": "Log Group Commit Latency: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent on rolling over to a new log segment file. This is the total number of recorded samples.",
                    "context": "log_roll_latency::total_count",
                    "name": "kudu_log_roll_latency_count",
                    "counter": true,
                    "label": "Log Roll Latency: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent on rolling over to a new log segment file. This is the total sum of recorded samples.",
                    "context": "log_roll_latency::total_sum",
                    "name": "kudu_log_roll_latency_sum",
                    "counter": true,
                    "label": "Log Roll Latency: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Number of log entry batches in a group commit group. This is the total number of recorded samples.",
                    "context": "log_entry_batches_per_group::total_count",
                    "name": "kudu_log_entry_batches_per_group_count",
                    "counter": true,
                    "label": "Log Group Commit Batch Size: Samples"
                },
                {
                    "numeratorUnit": "requests",
                    "description": "Number of log entry batches in a group commit group. This is the total sum of recorded samples.",
                    "context": "log_entry_batches_per_group::total_sum",
                    "name": "kudu_log_entry_batches_per_group_sum",
                    "counter": true,
                    "label": "Log Group Commit Batch Size: Total"
                },
                {
                    "numeratorUnit": "operations",
                    "description": "Number of operations in the leader queue ack'd by a majority but not all peers. This metric is always zero for followers.",
                    "context": "majority_done_ops::value",
                    "name": "kudu_majority_done_ops",
                    "counter": false,
                    "label": "Leader Operations Acked by Majority"
                },
                {
                    "numeratorUnit": "operations",
                    "description": "Number of operations in the peer's queue ack'd by a minority of peers.",
                    "context": "in_progress_ops::value",
                    "name": "kudu_in_progress_ops",
                    "counter": false,
                    "label": "Operations in Progress"
                },
                {
                    "numeratorUnit": "operations",
                    "description": "Number of operations in the log cache.",
                    "context": "log_cache_num_ops::value",
                    "name": "kudu_log_cache_num_ops",
                    "counter": false,
                    "label": "Log Cache Operation Count"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Amount of memory in use for caching the local log.",
                    "context": "log_cache_size::value",
                    "name": "kudu_log_cache_size",
                    "counter": false,
                    "label": "Log Cache Memory Usage"
                },
                {
                    "numeratorUnit": "requests",
                    "description": "Number of RPC requests rejected due to memory pressure while FOLLOWER.",
                    "context": "follower_memory_pressure_rejections::value",
                    "name": "kudu_follower_memory_pressure_rejections",
                    "counter": true,
                    "label": "Follower Memory Pressure Rejections"
                },
                {
                    "numeratorUnit": "units",
                    "description": "Current Term of the Raft Consensus algorithm. This number increments each time a leader election is started.",
                    "context": "raft_term::value",
                    "name": "kudu_raft_term",
                    "counter": false,
                    "label": "Current Raft Consensus Term"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Size of this tablet's memrowset",
                    "context": "memrowset_size::value",
                    "name": "kudu_memrowset_size",
                    "counter": false,
                    "label": "MemRowSet Memory Usage"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Size of this tablet on disk.",
                    "context": "on_disk_size::value",
                    "name": "kudu_on_disk_size",
                    "counter": false,
                    "label": "Tablet Size On Disk"
                },
                {
                    "numeratorUnit": "rows",
                    "description": "Number of rows inserted into this tablet since service start",
                    "context": "rows_inserted::value",
                    "name": "kudu_rows_inserted",
                    "counter": true,
                    "label": "Rows Inserted"
                },
                {
                    "numeratorUnit": "rows",
                    "description": "Number of rows upserted into this tablet since service start",
                    "context": "rows_upserted::value",
                    "name": "kudu_rows_upserted",
                    "counter": true,
                    "label": "Rows Upserted"
                },
                {
                    "numeratorUnit": "rows",
                    "description": "Number of row update operations performed on this tablet since service start",
                    "context": "rows_updated::value",
                    "name": "kudu_rows_updated",
                    "counter": true,
                    "label": "Rows Updated"
                },
                {
                    "numeratorUnit": "rows",
                    "description": "Number of row delete operations performed on this tablet since service start",
                    "context": "rows_deleted::value",
                    "name": "kudu_rows_deleted",
                    "counter": true,
                    "label": "Rows Deleted"
                },
                {
                    "numeratorUnit": "rows",
                    "description": "Number of rows returned by scanners to clients. This count is measured after predicates are applied, and thus is not a reflection of the amount of work being done by scanners.",
                    "context": "scanner_rows_returned::value",
                    "name": "kudu_scanner_rows_returned",
                    "counter": true,
                    "label": "Scanner Rows Returned"
                },
                {
                    "numeratorUnit": "cells",
                    "description": "Number of table cells returned by scanners to clients. This count is measured after predicates are applied, and thus is not a reflection of the amount of work being done by scanners.",
                    "context": "scanner_cells_returned::value",
                    "name": "kudu_scanner_cells_returned",
                    "counter": true,
                    "label": "Scanner Cells Returned"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Number of bytes returned by scanners to clients. This count is measured after predicates are applied and the data is decoded for consumption by clients, and thus is not a reflection of the amount of work being done by scanners.",
                    "context": "scanner_bytes_returned::value",
                    "name": "kudu_scanner_bytes_returned",
                    "counter": true,
                    "label": "Scanner Bytes Returned"
                },
                {
                    "numeratorUnit": "rows",
                    "description": "Number of rows processed by scan requests. This is measured as a raw count prior to application of predicates, deleted data,or MVCC-based filtering. Thus, this is a better measure of actual table rows that have been processed by scan operations compared to the Scanner Rows Returned metric.",
                    "context": "scanner_rows_scanned::value",
                    "name": "kudu_scanner_rows_scanned",
                    "counter": true,
                    "label": "Scanner Rows Scanned"
                },
                {
                    "numeratorUnit": "cells",
                    "description": "Number of table cells processed by scan requests. This is measured as a raw count prior to application of predicates, deleted data,or MVCC-based filtering. Thus, this is a better measure of actual table cells that have been processed by scan operations compared to the Scanner Cells Returned metric.\nNote that this only counts data that has been flushed to disk, and does not include data read from in-memory stores. However, itincludes both cache misses and cache hits.",
                    "context": "scanner_cells_scanned_from_disk::value",
                    "name": "kudu_scanner_cells_scanned_from_disk",
                    "counter": true,
                    "label": "Scanner Cells Scanned From Disk"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Number of bytes read by scan requests. This is measured as a raw count prior to application of predicates, deleted data,or MVCC-based filtering. Thus, this is a better measure of actual IO that has been caused by scan operations compared to the Scanner Bytes Returned metric.\nNote that this only counts data that has been flushed to disk, and does not include data read from in-memory stores. However, itincludes both cache misses and cache hits.",
                    "context": "scanner_bytes_scanned_from_disk::value",
                    "name": "kudu_scanner_bytes_scanned_from_disk",
                    "counter": true,
                    "label": "Scanner Bytes Scanned From Disk"
                },
                {
                    "numeratorUnit": "rows",
                    "description": "Number of inserts which failed because the key already existed",
                    "context": "insertions_failed_dup_key::value",
                    "name": "kudu_insertions_failed_dup_key",
                    "counter": true,
                    "label": "Duplicate Key Inserts"
                },
                {
                    "numeratorUnit": "scanners",
                    "description": "Number of scanners which have been started on this tablet",
                    "context": "scans_started::value",
                    "name": "kudu_scans_started",
                    "counter": true,
                    "label": "Scans Started"
                },
                {
                    "numeratorUnit": "probes",
                    "description": "Number of times a bloom filter was consulted",
                    "context": "bloom_lookups::value",
                    "name": "kudu_bloom_lookups",
                    "counter": true,
                    "label": "Bloom Filter Lookups"
                },
                {
                    "numeratorUnit": "probes",
                    "description": "Number of times a key cfile was consulted",
                    "context": "key_file_lookups::value",
                    "name": "kudu_key_file_lookups",
                    "counter": true,
                    "label": "Key File Lookups"
                },
                {
                    "numeratorUnit": "probes",
                    "description": "Number of times a delta file was consulted",
                    "context": "delta_file_lookups::value",
                    "name": "kudu_delta_file_lookups",
                    "counter": true,
                    "label": "Delta File Lookups"
                },
                {
                    "numeratorUnit": "probes",
                    "description": "Number of times a MemRowSet was consulted.",
                    "context": "mrs_lookups::value",
                    "name": "kudu_mrs_lookups",
                    "counter": true,
                    "label": "MemRowSet Lookups"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Amount of data that has been flushed to disk by this tablet.",
                    "context": "bytes_flushed::value",
                    "name": "kudu_bytes_flushed",
                    "counter": true,
                    "label": "Bytes Flushed"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Tracks the number of bloom filter lookups performed by each operation. A single operation may perform several bloom filter lookups if the tablet is not fully compacted. High frequency of high values may indicate that compaction is falling behind. This is the total number of recorded samples.",
                    "context": "bloom_lookups_per_op::total_count",
                    "name": "kudu_bloom_lookups_per_op_count",
                    "counter": true,
                    "label": "Bloom Lookups per Operation: Samples"
                },
                {
                    "numeratorUnit": "probes",
                    "description": "Tracks the number of bloom filter lookups performed by each operation. A single operation may perform several bloom filter lookups if the tablet is not fully compacted. High frequency of high values may indicate that compaction is falling behind. This is the total sum of recorded samples.",
                    "context": "bloom_lookups_per_op::total_sum",
                    "name": "kudu_bloom_lookups_per_op_sum",
                    "counter": true,
                    "label": "Bloom Lookups per Operation: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Tracks the number of key file lookups performed by each operation. A single operation may perform several key file lookups if the tablet is not fully compacted and if bloom filters are not effectively culling lookups. This is the total number of recorded samples.",
                    "context": "key_file_lookups_per_op::total_count",
                    "name": "kudu_key_file_lookups_per_op_count",
                    "counter": true,
                    "label": "Key Lookups per Operation: Samples"
                },
                {
                    "numeratorUnit": "probes",
                    "description": "Tracks the number of key file lookups performed by each operation. A single operation may perform several key file lookups if the tablet is not fully compacted and if bloom filters are not effectively culling lookups. This is the total sum of recorded samples.",
                    "context": "key_file_lookups_per_op::total_sum",
                    "name": "kudu_key_file_lookups_per_op_sum",
                    "counter": true,
                    "label": "Key Lookups per Operation: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Tracks the number of delta file lookups performed by each operation. A single operation may perform several delta file lookups if the tablet is not fully compacted. High frequency of high values may indicate that compaction is falling behind. This is the total number of recorded samples.",
                    "context": "delta_file_lookups_per_op::total_count",
                    "name": "kudu_delta_file_lookups_per_op_count",
                    "counter": true,
                    "label": "Delta File Lookups per Operation: Samples"
                },
                {
                    "numeratorUnit": "probes",
                    "description": "Tracks the number of delta file lookups performed by each operation. A single operation may perform several delta file lookups if the tablet is not fully compacted. High frequency of high values may indicate that compaction is falling behind. This is the total sum of recorded samples.",
                    "context": "delta_file_lookups_per_op::total_sum",
                    "name": "kudu_delta_file_lookups_per_op_sum",
                    "counter": true,
                    "label": "Delta File Lookups per Operation: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Duration of writes to this tablet with external consistency set to CLIENT_PROPAGATED. This is the total number of recorded samples.",
                    "context": "write_op_duration_client_propagated_consistency::total_count",
                    "name": "kudu_write_op_duration_client_propagated_consistency_count",
                    "counter": true,
                    "label": "Write Op Duration with Propagated Consistency: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Duration of writes to this tablet with external consistency set to CLIENT_PROPAGATED. This is the total sum of recorded samples.",
                    "context": "write_op_duration_client_propagated_consistency::total_sum",
                    "name": "kudu_write_op_duration_client_propagated_consistency_sum",
                    "counter": true,
                    "label": "Write Op Duration with Propagated Consistency: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Duration of writes to this tablet with external consistency set to COMMIT_WAIT. This is the total number of recorded samples.",
                    "context": "write_op_duration_commit_wait_consistency::total_count",
                    "name": "kudu_write_op_duration_commit_wait_consistency_count",
                    "counter": true,
                    "label": "Write Op Duration with Commit-Wait Consistency: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Duration of writes to this tablet with external consistency set to COMMIT_WAIT. This is the total sum of recorded samples.",
                    "context": "write_op_duration_commit_wait_consistency::total_sum",
                    "name": "kudu_write_op_duration_commit_wait_consistency_sum",
                    "counter": true,
                    "label": "Write Op Duration with Commit-Wait Consistency: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Time spent waiting for COMMIT_WAIT external consistency writes for this tablet. This is the total number of recorded samples.",
                    "context": "commit_wait_duration::total_count",
                    "name": "kudu_commit_wait_duration_count",
                    "counter": true,
                    "label": "Commit-Wait Duration: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Time spent waiting for COMMIT_WAIT external consistency writes for this tablet. This is the total sum of recorded samples.",
                    "context": "commit_wait_duration::total_sum",
                    "name": "kudu_commit_wait_duration_sum",
                    "counter": true,
                    "label": "Commit-Wait Duration: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Time spent waiting for in-flight writes to complete for READ_AT_SNAPSHOT scans. This is the total number of recorded samples.",
                    "context": "snapshot_read_inflight_wait_duration::total_count",
                    "name": "kudu_snapshot_read_inflight_wait_duration_count",
                    "counter": true,
                    "label": "Time Waiting For Snapshot Reads: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Time spent waiting for in-flight writes to complete for READ_AT_SNAPSHOT scans. This is the total sum of recorded samples.",
                    "context": "snapshot_read_inflight_wait_duration::total_sum",
                    "name": "kudu_snapshot_read_inflight_wait_duration_sum",
                    "counter": true,
                    "label": "Time Waiting For Snapshot Reads: Total"
                },
                {
                    "numeratorUnit": "operations",
                    "description": "Number of delta memstore flushes currently running.",
                    "context": "flush_dms_running::value",
                    "name": "kudu_flush_dms_running",
                    "counter": false,
                    "label": "DeltaMemStore Flushes Running"
                },
                {
                    "numeratorUnit": "operations",
                    "description": "Number of MemRowSet flushes currently running.",
                    "context": "flush_mrs_running::value",
                    "name": "kudu_flush_mrs_running",
                    "counter": false,
                    "label": "MemRowSet Flushes Running"
                },
                {
                    "numeratorUnit": "operations",
                    "description": "Number of RowSet compactions currently running.",
                    "context": "compact_rs_running::value",
                    "name": "kudu_compact_rs_running",
                    "counter": false,
                    "label": "RowSet Compactions Running"
                },
                {
                    "numeratorUnit": "operations",
                    "description": "Number of delta minor compactions currently running.",
                    "context": "delta_minor_compact_rs_running::value",
                    "name": "kudu_delta_minor_compact_rs_running",
                    "counter": false,
                    "label": "Minor Delta Compactions Running"
                },
                {
                    "numeratorUnit": "operations",
                    "description": "Number of delta major compactions currently running.",
                    "context": "delta_major_compact_rs_running::value",
                    "name": "kudu_delta_major_compact_rs_running",
                    "counter": false,
                    "label": "Major Delta Compactions Running"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Time spent flushing DeltaMemStores. This is the total number of recorded samples.",
                    "context": "flush_dms_duration::total_count",
                    "name": "kudu_flush_dms_duration_count",
                    "counter": true,
                    "label": "DeltaMemStore Flush Duration: Samples"
                },
                {
                    "numeratorUnit": "milliseconds",
                    "description": "Time spent flushing DeltaMemStores. This is the total sum of recorded samples.",
                    "context": "flush_dms_duration::total_sum",
                    "name": "kudu_flush_dms_duration_sum",
                    "counter": true,
                    "label": "DeltaMemStore Flush Duration: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Time spent flushing MemRowSets. This is the total number of recorded samples.",
                    "context": "flush_mrs_duration::total_count",
                    "name": "kudu_flush_mrs_duration_count",
                    "counter": true,
                    "label": "MemRowSet Flush Duration: Samples"
                },
                {
                    "numeratorUnit": "milliseconds",
                    "description": "Time spent flushing MemRowSets. This is the total sum of recorded samples.",
                    "context": "flush_mrs_duration::total_sum",
                    "name": "kudu_flush_mrs_duration_sum",
                    "counter": true,
                    "label": "MemRowSet Flush Duration: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Time spent compacting RowSets. This is the total number of recorded samples.",
                    "context": "compact_rs_duration::total_count",
                    "name": "kudu_compact_rs_duration_count",
                    "counter": true,
                    "label": "RowSet Compaction Duration: Samples"
                },
                {
                    "numeratorUnit": "milliseconds",
                    "description": "Time spent compacting RowSets. This is the total sum of recorded samples.",
                    "context": "compact_rs_duration::total_sum",
                    "name": "kudu_compact_rs_duration_sum",
                    "counter": true,
                    "label": "RowSet Compaction Duration: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Time spent minor delta compacting. This is the total number of recorded samples.",
                    "context": "delta_minor_compact_rs_duration::total_count",
                    "name": "kudu_delta_minor_compact_rs_duration_count",
                    "counter": true,
                    "label": "Minor Delta Compaction Duration: Samples"
                },
                {
                    "numeratorUnit": "milliseconds",
                    "description": "Time spent minor delta compacting. This is the total sum of recorded samples.",
                    "context": "delta_minor_compact_rs_duration::total_sum",
                    "name": "kudu_delta_minor_compact_rs_duration_sum",
                    "counter": true,
                    "label": "Minor Delta Compaction Duration: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Seconds spent major delta compacting. This is the total number of recorded samples.",
                    "context": "delta_major_compact_rs_duration::total_count",
                    "name": "kudu_delta_major_compact_rs_duration_count",
                    "counter": true,
                    "label": "Major Delta Compaction Duration: Samples"
                },
                {
                    "numeratorUnit": "seconds",
                    "description": "Seconds spent major delta compacting. This is the total sum of recorded samples.",
                    "context": "delta_major_compact_rs_duration::total_sum",
                    "name": "kudu_delta_major_compact_rs_duration_sum",
                    "counter": true,
                    "label": "Major Delta Compaction Duration: Total"
                },
                {
                    "numeratorUnit": "requests",
                    "description": "Number of RPC requests rejected due to memory pressure while LEADER.",
                    "context": "leader_memory_pressure_rejections::value",
                    "name": "kudu_leader_memory_pressure_rejections",
                    "counter": true,
                    "label": "Leader Memory Pressure Rejections"
                },
                {
                    "numeratorUnit": "operations",
                    "description": "Number of log GC operations currently running.",
                    "context": "log_gc_running::value",
                    "name": "kudu_log_gc_running",
                    "counter": false,
                    "label": "Log GCs Running"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Time spent garbage collecting the logs. This is the total number of recorded samples.",
                    "context": "log_gc_duration::total_count",
                    "name": "kudu_log_gc_duration_count",
                    "counter": true,
                    "label": "Log GC Duration: Samples"
                },
                {
                    "numeratorUnit": "milliseconds",
                    "description": "Time spent garbage collecting the logs. This is the total sum of recorded samples.",
                    "context": "log_gc_duration::total_sum",
                    "name": "kudu_log_gc_duration_sum",
                    "counter": true,
                    "label": "Log GC Duration: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Number of operations waiting to be prepared within this tablet. High queue lengths indicate that the server is unable to process operations as fast as they are being written to the WAL. This is the total number of recorded samples.",
                    "context": "op_prepare_queue_length::total_count",
                    "name": "kudu_op_prepare_queue_length_count",
                    "counter": true,
                    "label": "Operation Prepare Queue Length: Samples"
                },
                {
                    "numeratorUnit": "tasks",
                    "description": "Number of operations waiting to be prepared within this tablet. High queue lengths indicate that the server is unable to process operations as fast as they are being written to the WAL. This is the total sum of recorded samples.",
                    "context": "op_prepare_queue_length::total_sum",
                    "name": "kudu_op_prepare_queue_length_sum",
                    "counter": true,
                    "label": "Operation Prepare Queue Length: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Time that operations spent waiting in the prepare queue before being processed. High queue times indicate that the server is unable to process operations as fast as they are being written to the WAL. This is the total number of recorded samples.",
                    "context": "op_prepare_queue_time::total_count",
                    "name": "kudu_op_prepare_queue_time_count",
                    "counter": true,
                    "label": "Operation Prepare Queue Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Time that operations spent waiting in the prepare queue before being processed. High queue times indicate that the server is unable to process operations as fast as they are being written to the WAL. This is the total sum of recorded samples.",
                    "context": "op_prepare_queue_time::total_sum",
                    "name": "kudu_op_prepare_queue_time_sum",
                    "counter": true,
                    "label": "Operation Prepare Queue Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Time that operations spent being prepared in the tablet. High values may indicate that the server is under-provisioned or that operations are experiencing high contention with one another for locks. This is the total number of recorded samples.",
                    "context": "op_prepare_run_time::total_count",
                    "name": "kudu_op_prepare_run_time_count",
                    "counter": true,
                    "label": "Operation Prepare Run Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Time that operations spent being prepared in the tablet. High values may indicate that the server is under-provisioned or that operations are experiencing high contention with one another for locks. This is the total sum of recorded samples.",
                    "context": "op_prepare_run_time::total_sum",
                    "name": "kudu_op_prepare_run_time_sum",
                    "counter": true,
                    "label": "Operation Prepare Run Time: Total"
                },
                {
                    "numeratorUnit": "transactions",
                    "description": "Number of transactions currently in-flight, including any type.",
                    "context": "all_transactions_inflight::value",
                    "name": "kudu_all_transactions_inflight",
                    "counter": false,
                    "label": "Transactions In Flight"
                },
                {
                    "numeratorUnit": "transactions",
                    "description": "Number of write transactions currently in-flight",
                    "context": "write_transactions_inflight::value",
                    "name": "kudu_write_transactions_inflight",
                    "counter": false,
                    "label": "Write Transactions In Flight"
                },
                {
                    "numeratorUnit": "transactions",
                    "description": "Number of alter schema transactions currently in-flight",
                    "context": "alter_schema_transactions_inflight::value",
                    "name": "kudu_alter_schema_transactions_inflight",
                    "counter": false,
                    "label": "Alter Schema Transactions In Flight"
                },
                {
                    "numeratorUnit": "transactions",
                    "description": "Number of transactions rejected because the tablet's transaction memory limit was reached.",
                    "context": "transaction_memory_pressure_rejections::value",
                    "name": "kudu_transaction_memory_pressure_rejections",
                    "counter": true,
                    "label": "Transaction Memory Pressure Rejections"
                }
            ],
            "entityNameFormat": [
                "roleName",
                "kuduTabletId"
            ],
            "immutableAttributeNames": [
                "kuduTabletId",
                "serviceName",
                "roleName"
            ],
            "entityLabelFormat": "$kuduTabletId ($kuduTableName) ($hostname)",
            "label": "Kudu Replica",
            "nameForCrossEntityAggregateMetrics": "kudu_replicas",
            "name": "KUDU_REPLICA"
        }
    ],
    "version": "0.6.0",
    "name": "KUDU",
    "roles": [
        {
            "metricDefinitions": [
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of blocks inserted in the cache",
                    "context": "block_cache_inserts::value",
                    "name": "kudu_block_cache_inserts",
                    "counter": true,
                    "label": "Block Cache Inserts"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of blocks looked up from the cache",
                    "context": "block_cache_lookups::value",
                    "name": "kudu_block_cache_lookups",
                    "counter": true,
                    "label": "Block Cache Lookups"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of blocks evicted from the cache",
                    "context": "block_cache_evictions::value",
                    "name": "kudu_block_cache_evictions",
                    "counter": true,
                    "label": "Block Cache Evictions"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of lookups that didn't yield a block",
                    "context": "block_cache_misses::value",
                    "name": "kudu_block_cache_misses",
                    "counter": true,
                    "label": "Block Cache Misses"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of lookups that were expecting a block that didn't yield one.Use this number instead of cache_misses when trying to determine how efficient the cache is",
                    "context": "block_cache_misses_caching::value",
                    "name": "kudu_block_cache_misses_caching",
                    "counter": true,
                    "label": "Block Cache Misses (Caching)"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of lookups that found a block",
                    "context": "block_cache_hits::value",
                    "name": "kudu_block_cache_hits",
                    "counter": true,
                    "label": "Block Cache Hits"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of lookups that were expecting a block that found one.Use this number instead of cache_hits when trying to determine how efficient the cache is",
                    "context": "block_cache_hits_caching::value",
                    "name": "kudu_block_cache_hits_caching",
                    "counter": true,
                    "label": "Block Cache Hits (Caching)"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Memory consumed by the block cache",
                    "context": "block_cache_usage::value",
                    "name": "kudu_block_cache_usage",
                    "counter": false,
                    "label": "Block Cache Memory Usage"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Amount of time consumed by contention on internal spinlocks since the server started. If this increases rapidly, it may indicate a performance issue in Kudu internals triggered by a particular workload and warrant investigation.",
                    "context": "spinlock_contention_time::value",
                    "name": "kudu_spinlock_contention_time",
                    "counter": true,
                    "label": "Spinlock Contention Time"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Amount of time consumed by contention on tcmalloc's locks since the server started. If this increases rapidly, it may indicate a performance issue in Kudu internals triggered by a particular workload and warrant investigation.",
                    "context": "tcmalloc_contention_time::value",
                    "name": "kudu_tcmalloc_contention_time",
                    "counter": true,
                    "label": "TCMalloc Contention Time"
                },
                {
                    "numeratorUnit": "threads",
                    "description": "Total number of threads started on this server",
                    "context": "threads_started::value",
                    "name": "kudu_threads_started",
                    "counter": true,
                    "label": "Threads Started"
                },
                {
                    "numeratorUnit": "threads",
                    "description": "Current number of running threads",
                    "context": "threads_running::value",
                    "name": "kudu_threads_running",
                    "counter": false,
                    "label": "Threads Running"
                },
                {
                    "numeratorUnit": "milliseconds",
                    "description": "Total user CPU time of the process",
                    "context": "cpu_utime::value",
                    "name": "kudu_cpu_utime",
                    "counter": true,
                    "label": "User CPU Time"
                },
                {
                    "numeratorUnit": "milliseconds",
                    "description": "Total system CPU time of the process",
                    "context": "cpu_stime::value",
                    "name": "kudu_cpu_stime",
                    "counter": true,
                    "label": "System CPU Time"
                },
                {
                    "numeratorUnit": "context switches",
                    "description": "Total voluntary context switches",
                    "context": "voluntary_context_switches::value",
                    "name": "kudu_voluntary_context_switches",
                    "counter": true,
                    "label": "Voluntary Context Switches"
                },
                {
                    "numeratorUnit": "context switches",
                    "description": "Total involuntary context switches",
                    "context": "involuntary_context_switches::value",
                    "name": "kudu_involuntary_context_switches",
                    "counter": true,
                    "label": "Involuntary Context Switches"
                },
                {
                    "numeratorUnit": "connections",
                    "description": "Number of incoming TCP connections made to the RPC server",
                    "context": "rpc_connections_accepted::value",
                    "name": "kudu_rpc_connections_accepted",
                    "counter": true,
                    "label": "RPC Connections Accepted"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Number of microseconds incoming RPC requests spend in the worker queue. This is the total number of recorded samples.",
                    "context": "rpc_incoming_queue_time::total_count",
                    "name": "kudu_rpc_incoming_queue_time_count",
                    "counter": true,
                    "label": "RPC Queue Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Number of microseconds incoming RPC requests spend in the worker queue. This is the total sum of recorded samples.",
                    "context": "rpc_incoming_queue_time::total_sum",
                    "name": "kudu_rpc_incoming_queue_time_sum",
                    "counter": true,
                    "label": "RPC Queue Time: Total"
                },
                {
                    "numeratorUnit": "requests",
                    "description": "Number of RPCs whose timeout elapsed while waiting in the service queue, and thus were not processed.",
                    "context": "rpcs_timed_out_in_queue::value",
                    "name": "kudu_rpcs_timed_out_in_queue",
                    "counter": true,
                    "label": "RPC Queue Timeouts"
                },
                {
                    "numeratorUnit": "requests",
                    "description": "Number of RPCs dropped because the service queue was full.",
                    "context": "rpcs_queue_overflow::value",
                    "name": "kudu_rpcs_queue_overflow",
                    "counter": true,
                    "label": "RPC Queue Overflows"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerAdminService.CreateTablet() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerAdminService_CreateTablet::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserveradminservice_createtablet_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerAdminService.CreateTablet RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerAdminService.CreateTablet() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerAdminService_CreateTablet::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserveradminservice_createtablet_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerAdminService.CreateTablet RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerAdminService.DeleteTablet() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerAdminService_DeleteTablet::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserveradminservice_deletetablet_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerAdminService.DeleteTablet RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerAdminService.DeleteTablet() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerAdminService_DeleteTablet::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserveradminservice_deletetablet_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerAdminService.DeleteTablet RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerAdminService.AlterSchema() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerAdminService_AlterSchema::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserveradminservice_alterschema_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerAdminService.AlterSchema RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerAdminService.AlterSchema() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerAdminService_AlterSchema::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserveradminservice_alterschema_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerAdminService.AlterSchema RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.UpdateConsensus() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_UpdateConsensus::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_updateconsensus_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.UpdateConsensus RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.UpdateConsensus() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_UpdateConsensus::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_updateconsensus_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.UpdateConsensus RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.RequestConsensusVote() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_RequestConsensusVote::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_requestconsensusvote_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.RequestConsensusVote RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.RequestConsensusVote() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_RequestConsensusVote::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_requestconsensusvote_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.RequestConsensusVote RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.ChangeConfig() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_ChangeConfig::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_changeconfig_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.ChangeConfig RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.ChangeConfig() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_ChangeConfig::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_changeconfig_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.ChangeConfig RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.GetNodeInstance() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_GetNodeInstance::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_getnodeinstance_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.GetNodeInstance RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.GetNodeInstance() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_GetNodeInstance::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_getnodeinstance_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.GetNodeInstance RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.RunLeaderElection() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_RunLeaderElection::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_runleaderelection_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.RunLeaderElection RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.RunLeaderElection() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_RunLeaderElection::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_runleaderelection_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.RunLeaderElection RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.LeaderStepDown() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_LeaderStepDown::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_leaderstepdown_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.LeaderStepDown RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.LeaderStepDown() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_LeaderStepDown::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_leaderstepdown_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.LeaderStepDown RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.GetLastOpId() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_GetLastOpId::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_getlastopid_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.GetLastOpId RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.GetLastOpId() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_GetLastOpId::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_getlastopid_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.GetLastOpId RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.GetConsensusState() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_GetConsensusState::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_getconsensusstate_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.GetConsensusState RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.GetConsensusState() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_GetConsensusState::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_getconsensusstate_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.GetConsensusState RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.StartTabletCopy() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_StartTabletCopy::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_starttabletcopy_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.StartTabletCopy RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.StartTabletCopy() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_StartTabletCopy::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_starttabletcopy_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.StartTabletCopy RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletCopyService.BeginTabletCopySession() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletCopyService_BeginTabletCopySession::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletcopyservice_begintabletcopysession_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletCopyService.BeginTabletCopySession RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletCopyService.BeginTabletCopySession() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletCopyService_BeginTabletCopySession::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletcopyservice_begintabletcopysession_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletCopyService.BeginTabletCopySession RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletCopyService.CheckSessionActive() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletCopyService_CheckSessionActive::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletcopyservice_checksessionactive_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletCopyService.CheckSessionActive RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletCopyService.CheckSessionActive() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletCopyService_CheckSessionActive::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletcopyservice_checksessionactive_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletCopyService.CheckSessionActive RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletCopyService.FetchData() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletCopyService_FetchData::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletcopyservice_fetchdata_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletCopyService.FetchData RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletCopyService.FetchData() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletCopyService_FetchData::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletcopyservice_fetchdata_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletCopyService.FetchData RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletCopyService.EndTabletCopySession() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletCopyService_EndTabletCopySession::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletcopyservice_endtabletcopysession_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletCopyService.EndTabletCopySession RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletCopyService.EndTabletCopySession() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletCopyService_EndTabletCopySession::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletcopyservice_endtabletcopysession_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletCopyService.EndTabletCopySession RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.Ping() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_Ping::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_ping_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.Ping RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.Ping() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_Ping::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_ping_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.Ping RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.Write() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_Write::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_write_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.Write RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.Write() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_Write::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_write_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.Write RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.Scan() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_Scan::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_scan_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.Scan RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.Scan() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_Scan::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_scan_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.Scan RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.ScannerKeepAlive() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_ScannerKeepAlive::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_scannerkeepalive_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.ScannerKeepAlive RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.ScannerKeepAlive() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_ScannerKeepAlive::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_scannerkeepalive_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.ScannerKeepAlive RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.ListTablets() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_ListTablets::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_listtablets_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.ListTablets RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.ListTablets() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_ListTablets::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_listtablets_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.ListTablets RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.Checksum() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_Checksum::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_checksum_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.Checksum RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.Checksum() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_Checksum::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_checksum_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.Checksum RPC Time: Total"
                },
                {
                    "numeratorUnit": "hits",
                    "description": "Number of codegen cache hits since start",
                    "context": "code_cache_hits::value",
                    "name": "kudu_code_cache_hits",
                    "counter": true,
                    "label": "Codegen Cache Hits"
                },
                {
                    "numeratorUnit": "queries",
                    "description": "Number of codegen cache queries (hits + misses) since start",
                    "context": "code_cache_queries::value",
                    "name": "kudu_code_cache_queries",
                    "counter": true,
                    "label": "Codegen Cache Queries"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Hybrid clock timestamp.",
                    "context": "hybrid_clock_timestamp::value",
                    "name": "kudu_hybrid_clock_timestamp",
                    "counter": false,
                    "label": "Hybrid Clock Timestamp"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Server clock maximum error.",
                    "context": "hybrid_clock_error::value",
                    "name": "kudu_hybrid_clock_error",
                    "counter": false,
                    "label": "Hybrid Clock Error"
                },
                {
                    "numeratorUnit": "units",
                    "description": "Logical clock timestamp.",
                    "context": "logical_clock_timestamp::value",
                    "name": "kudu_logical_clock_timestamp",
                    "counter": false,
                    "label": "Logical Clock Timestamp"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.server.GenericService.SetFlag() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_SetFlag::total_count",
                    "name": "kudu_handler_latency_kudu_server_genericservice_setflag_count",
                    "counter": true,
                    "label": "kudu.server.GenericService.SetFlag RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.server.GenericService.SetFlag() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_SetFlag::total_sum",
                    "name": "kudu_handler_latency_kudu_server_genericservice_setflag_sum",
                    "counter": true,
                    "label": "kudu.server.GenericService.SetFlag RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.server.GenericService.FlushCoverage() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_FlushCoverage::total_count",
                    "name": "kudu_handler_latency_kudu_server_genericservice_flushcoverage_count",
                    "counter": true,
                    "label": "kudu.server.GenericService.FlushCoverage RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.server.GenericService.FlushCoverage() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_FlushCoverage::total_sum",
                    "name": "kudu_handler_latency_kudu_server_genericservice_flushcoverage_sum",
                    "counter": true,
                    "label": "kudu.server.GenericService.FlushCoverage RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.server.GenericService.ServerClock() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_ServerClock::total_count",
                    "name": "kudu_handler_latency_kudu_server_genericservice_serverclock_count",
                    "counter": true,
                    "label": "kudu.server.GenericService.ServerClock RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.server.GenericService.ServerClock() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_ServerClock::total_sum",
                    "name": "kudu_handler_latency_kudu_server_genericservice_serverclock_sum",
                    "counter": true,
                    "label": "kudu.server.GenericService.ServerClock RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.server.GenericService.SetServerWallClockForTests() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_SetServerWallClockForTests::total_count",
                    "name": "kudu_handler_latency_kudu_server_genericservice_setserverwallclockfortests_count",
                    "counter": true,
                    "label": "kudu.server.GenericService.SetServerWallClockForTests RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.server.GenericService.SetServerWallClockForTests() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_SetServerWallClockForTests::total_sum",
                    "name": "kudu_handler_latency_kudu_server_genericservice_setserverwallclockfortests_sum",
                    "counter": true,
                    "label": "kudu.server.GenericService.SetServerWallClockForTests RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.server.GenericService.GetStatus() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_GetStatus::total_count",
                    "name": "kudu_handler_latency_kudu_server_genericservice_getstatus_count",
                    "counter": true,
                    "label": "kudu.server.GenericService.GetStatus RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.server.GenericService.GetStatus() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_GetStatus::total_sum",
                    "name": "kudu_handler_latency_kudu_server_genericservice_getstatus_sum",
                    "counter": true,
                    "label": "kudu.server.GenericService.GetStatus RPC Time: Total"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of data blocks currently open for reading",
                    "context": "block_manager_blocks_open_reading::value",
                    "name": "kudu_block_manager_blocks_open_reading",
                    "counter": false,
                    "label": "Data Blocks Open For Read"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of data blocks currently open for writing",
                    "context": "block_manager_blocks_open_writing::value",
                    "name": "kudu_block_manager_blocks_open_writing",
                    "counter": false,
                    "label": "Data Blocks Open For Write"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of data blocks opened for writing since service start",
                    "context": "block_manager_total_writable_blocks::value",
                    "name": "kudu_block_manager_total_writable_blocks",
                    "counter": true,
                    "label": "Data Blocks Opened For Write"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of data blocks opened for reading since service start",
                    "context": "block_manager_total_readable_blocks::value",
                    "name": "kudu_block_manager_total_readable_blocks",
                    "counter": true,
                    "label": "Data Blocks Opened For Read"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Number of bytes of block data written since service start",
                    "context": "block_manager_total_bytes_written::value",
                    "name": "kudu_block_manager_total_bytes_written",
                    "counter": true,
                    "label": "Block Data Bytes Written"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Number of bytes of block data read since service start",
                    "context": "block_manager_total_bytes_read::value",
                    "name": "kudu_block_manager_total_bytes_read",
                    "counter": true,
                    "label": "Block Data Bytes Read"
                },
                {
                    "numeratorUnit": "data directories",
                    "description": "Number of data directories whose disks are currently full",
                    "context": "data_dirs_full::value",
                    "name": "kudu_data_dirs_full",
                    "counter": false,
                    "label": "Data Directories Full"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Number of bytes of data blocks currently under management",
                    "context": "log_block_manager_bytes_under_management::value",
                    "name": "kudu_log_block_manager_bytes_under_management",
                    "counter": false,
                    "label": "Bytes Under Management"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of data blocks currently under management",
                    "context": "log_block_manager_blocks_under_management::value",
                    "name": "kudu_log_block_manager_blocks_under_management",
                    "counter": false,
                    "label": "Blocks Under Management"
                },
                {
                    "numeratorUnit": "log block containers",
                    "description": "Number of log block containers",
                    "context": "log_block_manager_containers::value",
                    "name": "kudu_log_block_manager_containers",
                    "counter": false,
                    "label": "Number of Block Containers"
                },
                {
                    "numeratorUnit": "log block containers",
                    "description": "Number of full log block containers",
                    "context": "log_block_manager_full_containers::value",
                    "name": "kudu_log_block_manager_full_containers",
                    "counter": false,
                    "label": "Number of Full Block Containers"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.Ping() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_Ping::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_ping_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.Ping RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.Ping() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_Ping::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_ping_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.Ping RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.TSHeartbeat() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_TSHeartbeat::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_tsheartbeat_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.TSHeartbeat RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.TSHeartbeat() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_TSHeartbeat::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_tsheartbeat_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.TSHeartbeat RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.GetTabletLocations() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_GetTabletLocations::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_gettabletlocations_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.GetTabletLocations RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.GetTabletLocations() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_GetTabletLocations::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_gettabletlocations_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.GetTabletLocations RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.CreateTable() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_CreateTable::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_createtable_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.CreateTable RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.CreateTable() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_CreateTable::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_createtable_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.CreateTable RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.IsCreateTableDone() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_IsCreateTableDone::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_iscreatetabledone_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.IsCreateTableDone RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.IsCreateTableDone() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_IsCreateTableDone::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_iscreatetabledone_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.IsCreateTableDone RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.DeleteTable() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_DeleteTable::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_deletetable_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.DeleteTable RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.DeleteTable() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_DeleteTable::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_deletetable_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.DeleteTable RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.AlterTable() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_AlterTable::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_altertable_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.AlterTable RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.AlterTable() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_AlterTable::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_altertable_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.AlterTable RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.IsAlterTableDone() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_IsAlterTableDone::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_isaltertabledone_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.IsAlterTableDone RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.IsAlterTableDone() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_IsAlterTableDone::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_isaltertabledone_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.IsAlterTableDone RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.ListTables() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_ListTables::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_listtables_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.ListTables RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.ListTables() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_ListTables::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_listtables_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.ListTables RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.GetTableLocations() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_GetTableLocations::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_gettablelocations_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.GetTableLocations RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.GetTableLocations() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_GetTableLocations::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_gettablelocations_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.GetTableLocations RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.GetTableSchema() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_GetTableSchema::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_gettableschema_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.GetTableSchema RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.GetTableSchema() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_GetTableSchema::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_gettableschema_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.GetTableSchema RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.ListTabletServers() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_ListTabletServers::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_listtabletservers_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.ListTabletServers RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.ListTabletServers() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_ListTabletServers::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_listtabletservers_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.ListTabletServers RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.ListMasters() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_ListMasters::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_listmasters_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.ListMasters RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.ListMasters() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_ListMasters::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_listmasters_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.ListMasters RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.GetMasterRegistration() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_GetMasterRegistration::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_getmasterregistration_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.GetMasterRegistration RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.GetMasterRegistration() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_GetMasterRegistration::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_getmasterregistration_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.GetMasterRegistration RPC Time: Total"
                },
                {
                    "numeratorUnit": "messages",
                    "description": "Number of INFO-level log messages emitted by the application.",
                    "context": "glog_info_messages::value",
                    "name": "kudu_glog_info_messages",
                    "counter": true,
                    "label": "INFO-level Log Messages"
                },
                {
                    "numeratorUnit": "messages",
                    "description": "Number of WARNING-level log messages emitted by the application.",
                    "context": "glog_warning_messages::value",
                    "name": "kudu_glog_warning_messages",
                    "counter": true,
                    "label": "WARNING-level Log Messages"
                },
                {
                    "numeratorUnit": "messages",
                    "description": "Number of ERROR-level log messages emitted by the application.",
                    "context": "glog_error_messages::value",
                    "name": "kudu_glog_error_messages",
                    "counter": true,
                    "label": "ERROR-level Log Messages"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Number of bytes used by the application. This will not typically match the memory use reported by the OS, because it does not include TCMalloc overhead or memory fragmentation.",
                    "context": "generic_current_allocated_bytes::value",
                    "name": "kudu_generic_current_allocated_bytes",
                    "counter": false,
                    "label": "Heap Memory Usage"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Bytes of system memory reserved by TCMalloc.",
                    "context": "generic_heap_size::value",
                    "name": "kudu_generic_heap_size",
                    "counter": false,
                    "label": "Reserved Heap Memory"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Number of bytes in free, mapped pages in page heap. These bytes can be used to fulfill allocation requests. They always count towards virtual memory usage, and unless the underlying memory is swapped out by the OS, they also count towards physical memory usage.",
                    "context": "tcmalloc_pageheap_free_bytes::value",
                    "name": "kudu_tcmalloc_pageheap_free_bytes",
                    "counter": false,
                    "label": "Free Heap Memory"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Number of bytes in free, unmapped pages in page heap. These are bytes that have been released back to the OS, possibly by one of the MallocExtension \"Release\" calls. They can be used to fulfill allocation requests, but typically incur a page fault. They always count towards virtual memory usage, and depending on the OS, typically do not count towards physical memory usage.",
                    "context": "tcmalloc_pageheap_unmapped_bytes::value",
                    "name": "kudu_tcmalloc_pageheap_unmapped_bytes",
                    "counter": false,
                    "label": "Unmapped Heap Memory"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "A limit to how much memory TCMalloc dedicates for small objects. Higher numbers trade off more memory use for -- in some situations -- improved efficiency.",
                    "context": "tcmalloc_max_total_thread_cache_bytes::value",
                    "name": "kudu_tcmalloc_max_total_thread_cache_bytes",
                    "counter": false,
                    "label": "Thread Cache Memory Limit"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "A measure of some of the memory TCMalloc is using (for small objects).",
                    "context": "tcmalloc_current_total_thread_cache_bytes::value",
                    "name": "kudu_tcmalloc_current_total_thread_cache_bytes",
                    "counter": false,
                    "label": "Thread Cache Memory Usage"
                },
                {
                    "numeratorUnit": "scanners",
                    "description": "Number of scanners that have expired since service start",
                    "context": "scanners_expired::value",
                    "name": "kudu_scanners_expired",
                    "counter": true,
                    "label": "Scanners Expired"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Histogram of the duration of active scanners on this tablet. This is the total number of recorded samples.",
                    "context": "scanner_duration::total_count",
                    "name": "kudu_scanner_duration_count",
                    "counter": true,
                    "label": "Scanner Duration: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Histogram of the duration of active scanners on this tablet. This is the total sum of recorded samples.",
                    "context": "scanner_duration::total_sum",
                    "name": "kudu_scanner_duration_sum",
                    "counter": true,
                    "label": "Scanner Duration: Total"
                },
                {
                    "numeratorUnit": "scanners",
                    "description": "Number of scanners that are currently active",
                    "context": "active_scanners::value",
                    "name": "kudu_active_scanners",
                    "counter": false,
                    "label": "Active Scanners"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Number of operations waiting to be applied to the tablet. High queue lengths indicate that the server is unable to process operations as fast as they are being written to the WAL. This is the total number of recorded samples.",
                    "context": "op_apply_queue_length::total_count",
                    "name": "kudu_op_apply_queue_length_count",
                    "counter": true,
                    "label": "Operation Apply Queue Length: Samples"
                },
                {
                    "numeratorUnit": "tasks",
                    "description": "Number of operations waiting to be applied to the tablet. High queue lengths indicate that the server is unable to process operations as fast as they are being written to the WAL. This is the total sum of recorded samples.",
                    "context": "op_apply_queue_length::total_sum",
                    "name": "kudu_op_apply_queue_length_sum",
                    "counter": true,
                    "label": "Operation Apply Queue Length: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Time that operations spent waiting in the apply queue before being processed. High queue times indicate that the server is unable to process operations as fast as they are being written to the WAL. This is the total number of recorded samples.",
                    "context": "op_apply_queue_time::total_count",
                    "name": "kudu_op_apply_queue_time_count",
                    "counter": true,
                    "label": "Operation Apply Queue Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Time that operations spent waiting in the apply queue before being processed. High queue times indicate that the server is unable to process operations as fast as they are being written to the WAL. This is the total sum of recorded samples.",
                    "context": "op_apply_queue_time::total_sum",
                    "name": "kudu_op_apply_queue_time_sum",
                    "counter": true,
                    "label": "Operation Apply Queue Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Time that operations spent being applied to the tablet. High values may indicate that the server is under-provisioned or that operations consist of very large batches. This is the total number of recorded samples.",
                    "context": "op_apply_run_time::total_count",
                    "name": "kudu_op_apply_run_time_count",
                    "counter": true,
                    "label": "Operation Apply Run Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Time that operations spent being applied to the tablet. High values may indicate that the server is under-provisioned or that operations consist of very large batches. This is the total sum of recorded samples.",
                    "context": "op_apply_run_time::total_sum",
                    "name": "kudu_op_apply_run_time_sum",
                    "counter": true,
                    "label": "Operation Apply Run Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.StartRemoteBootstrap() RPC requests. This is the total number of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_StartRemoteBootstrap::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_startremotebootstrap_count",
                    "counter": true,
                    "label": "DEPRECATED: kudu.consensus.ConsensusService.StartRemoteBootstrap RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.StartRemoteBootstrap() RPC requests. This is the total sum of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_StartRemoteBootstrap::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_startremotebootstrap_sum",
                    "counter": true,
                    "label": "DEPRECATED: kudu.consensus.ConsensusService.StartRemoteBootstrap RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.RemoteBootstrapService.FetchData() RPC requests. This is the total number of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_tserver_RemoteBootstrapService_FetchData::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_remotebootstrapservice_fetchdata_count",
                    "counter": true,
                    "label": "DEPRECATED: kudu.tserver.RemoteBootstrapService.FetchData RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.RemoteBootstrapService.FetchData() RPC requests. This is the total sum of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_tserver_RemoteBootstrapService_FetchData::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_remotebootstrapservice_fetchdata_sum",
                    "counter": true,
                    "label": "DEPRECATED: kudu.tserver.RemoteBootstrapService.FetchData RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.RemoteBootstrapService.CheckSessionActive() RPC requests. This is the total number of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_tserver_RemoteBootstrapService_CheckSessionActive::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_remotebootstrapservice_checksessionactive_count",
                    "counter": true,
                    "label": "DEPRECATED: kudu.tserver.RemoteBootstrapService.CheckSessionActive RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.RemoteBootstrapService.CheckSessionActive() RPC requests. This is the total sum of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_tserver_RemoteBootstrapService_CheckSessionActive::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_remotebootstrapservice_checksessionactive_sum",
                    "counter": true,
                    "label": "DEPRECATED: kudu.tserver.RemoteBootstrapService.CheckSessionActive RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.RemoteBootstrapService.EndRemoteBootstrapSession() RPC requests. This is the total number of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_tserver_RemoteBootstrapService_EndRemoteBootstrapSession::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_remotebootstrapservice_endremotebootstrapsession_count",
                    "counter": true,
                    "label": "DEPRECATED: kudu.tserver.RemoteBootstrapService.EndRemoteBootstrapSession RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.RemoteBootstrapService.EndRemoteBootstrapSession() RPC requests. This is the total sum of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_tserver_RemoteBootstrapService_EndRemoteBootstrapSession::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_remotebootstrapservice_endremotebootstrapsession_sum",
                    "counter": true,
                    "label": "DEPRECATED: kudu.tserver.RemoteBootstrapService.EndRemoteBootstrapSession RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.RemoteBootstrapService.BeginRemoteBootstrapSession() RPC requests. This is the total number of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_tserver_RemoteBootstrapService_BeginRemoteBootstrapSession::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_remotebootstrapservice_beginremotebootstrapsession_count",
                    "counter": true,
                    "label": "DEPRECATED: kudu.tserver.RemoteBootstrapService.BeginRemoteBootstrapSession RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.RemoteBootstrapService.BeginRemoteBootstrapSession() RPC requests. This is the total sum of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_tserver_RemoteBootstrapService_BeginRemoteBootstrapSession::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_remotebootstrapservice_beginremotebootstrapsession_sum",
                    "counter": true,
                    "label": "DEPRECATED: kudu.tserver.RemoteBootstrapService.BeginRemoteBootstrapSession RPC Time: Total"
                }
            ],
            "nameForCrossEntityAggregateMetrics": "kudu_tservers",
            "name": "KUDU_TSERVER"
        },
        {
            "metricDefinitions": [
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of blocks inserted in the cache",
                    "context": "block_cache_inserts::value",
                    "name": "kudu_block_cache_inserts",
                    "counter": true,
                    "label": "Block Cache Inserts"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of blocks looked up from the cache",
                    "context": "block_cache_lookups::value",
                    "name": "kudu_block_cache_lookups",
                    "counter": true,
                    "label": "Block Cache Lookups"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of blocks evicted from the cache",
                    "context": "block_cache_evictions::value",
                    "name": "kudu_block_cache_evictions",
                    "counter": true,
                    "label": "Block Cache Evictions"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of lookups that didn't yield a block",
                    "context": "block_cache_misses::value",
                    "name": "kudu_block_cache_misses",
                    "counter": true,
                    "label": "Block Cache Misses"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of lookups that were expecting a block that didn't yield one.Use this number instead of cache_misses when trying to determine how efficient the cache is",
                    "context": "block_cache_misses_caching::value",
                    "name": "kudu_block_cache_misses_caching",
                    "counter": true,
                    "label": "Block Cache Misses (Caching)"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of lookups that found a block",
                    "context": "block_cache_hits::value",
                    "name": "kudu_block_cache_hits",
                    "counter": true,
                    "label": "Block Cache Hits"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of lookups that were expecting a block that found one.Use this number instead of cache_hits when trying to determine how efficient the cache is",
                    "context": "block_cache_hits_caching::value",
                    "name": "kudu_block_cache_hits_caching",
                    "counter": true,
                    "label": "Block Cache Hits (Caching)"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Memory consumed by the block cache",
                    "context": "block_cache_usage::value",
                    "name": "kudu_block_cache_usage",
                    "counter": false,
                    "label": "Block Cache Memory Usage"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Amount of time consumed by contention on internal spinlocks since the server started. If this increases rapidly, it may indicate a performance issue in Kudu internals triggered by a particular workload and warrant investigation.",
                    "context": "spinlock_contention_time::value",
                    "name": "kudu_spinlock_contention_time",
                    "counter": true,
                    "label": "Spinlock Contention Time"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Amount of time consumed by contention on tcmalloc's locks since the server started. If this increases rapidly, it may indicate a performance issue in Kudu internals triggered by a particular workload and warrant investigation.",
                    "context": "tcmalloc_contention_time::value",
                    "name": "kudu_tcmalloc_contention_time",
                    "counter": true,
                    "label": "TCMalloc Contention Time"
                },
                {
                    "numeratorUnit": "threads",
                    "description": "Total number of threads started on this server",
                    "context": "threads_started::value",
                    "name": "kudu_threads_started",
                    "counter": true,
                    "label": "Threads Started"
                },
                {
                    "numeratorUnit": "threads",
                    "description": "Current number of running threads",
                    "context": "threads_running::value",
                    "name": "kudu_threads_running",
                    "counter": false,
                    "label": "Threads Running"
                },
                {
                    "numeratorUnit": "milliseconds",
                    "description": "Total user CPU time of the process",
                    "context": "cpu_utime::value",
                    "name": "kudu_cpu_utime",
                    "counter": true,
                    "label": "User CPU Time"
                },
                {
                    "numeratorUnit": "milliseconds",
                    "description": "Total system CPU time of the process",
                    "context": "cpu_stime::value",
                    "name": "kudu_cpu_stime",
                    "counter": true,
                    "label": "System CPU Time"
                },
                {
                    "numeratorUnit": "context switches",
                    "description": "Total voluntary context switches",
                    "context": "voluntary_context_switches::value",
                    "name": "kudu_voluntary_context_switches",
                    "counter": true,
                    "label": "Voluntary Context Switches"
                },
                {
                    "numeratorUnit": "context switches",
                    "description": "Total involuntary context switches",
                    "context": "involuntary_context_switches::value",
                    "name": "kudu_involuntary_context_switches",
                    "counter": true,
                    "label": "Involuntary Context Switches"
                },
                {
                    "numeratorUnit": "connections",
                    "description": "Number of incoming TCP connections made to the RPC server",
                    "context": "rpc_connections_accepted::value",
                    "name": "kudu_rpc_connections_accepted",
                    "counter": true,
                    "label": "RPC Connections Accepted"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Number of microseconds incoming RPC requests spend in the worker queue. This is the total number of recorded samples.",
                    "context": "rpc_incoming_queue_time::total_count",
                    "name": "kudu_rpc_incoming_queue_time_count",
                    "counter": true,
                    "label": "RPC Queue Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Number of microseconds incoming RPC requests spend in the worker queue. This is the total sum of recorded samples.",
                    "context": "rpc_incoming_queue_time::total_sum",
                    "name": "kudu_rpc_incoming_queue_time_sum",
                    "counter": true,
                    "label": "RPC Queue Time: Total"
                },
                {
                    "numeratorUnit": "requests",
                    "description": "Number of RPCs whose timeout elapsed while waiting in the service queue, and thus were not processed.",
                    "context": "rpcs_timed_out_in_queue::value",
                    "name": "kudu_rpcs_timed_out_in_queue",
                    "counter": true,
                    "label": "RPC Queue Timeouts"
                },
                {
                    "numeratorUnit": "requests",
                    "description": "Number of RPCs dropped because the service queue was full.",
                    "context": "rpcs_queue_overflow::value",
                    "name": "kudu_rpcs_queue_overflow",
                    "counter": true,
                    "label": "RPC Queue Overflows"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerAdminService.CreateTablet() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerAdminService_CreateTablet::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserveradminservice_createtablet_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerAdminService.CreateTablet RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerAdminService.CreateTablet() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerAdminService_CreateTablet::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserveradminservice_createtablet_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerAdminService.CreateTablet RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerAdminService.DeleteTablet() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerAdminService_DeleteTablet::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserveradminservice_deletetablet_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerAdminService.DeleteTablet RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerAdminService.DeleteTablet() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerAdminService_DeleteTablet::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserveradminservice_deletetablet_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerAdminService.DeleteTablet RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerAdminService.AlterSchema() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerAdminService_AlterSchema::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserveradminservice_alterschema_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerAdminService.AlterSchema RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerAdminService.AlterSchema() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerAdminService_AlterSchema::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserveradminservice_alterschema_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerAdminService.AlterSchema RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.UpdateConsensus() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_UpdateConsensus::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_updateconsensus_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.UpdateConsensus RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.UpdateConsensus() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_UpdateConsensus::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_updateconsensus_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.UpdateConsensus RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.RequestConsensusVote() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_RequestConsensusVote::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_requestconsensusvote_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.RequestConsensusVote RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.RequestConsensusVote() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_RequestConsensusVote::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_requestconsensusvote_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.RequestConsensusVote RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.ChangeConfig() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_ChangeConfig::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_changeconfig_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.ChangeConfig RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.ChangeConfig() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_ChangeConfig::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_changeconfig_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.ChangeConfig RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.GetNodeInstance() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_GetNodeInstance::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_getnodeinstance_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.GetNodeInstance RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.GetNodeInstance() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_GetNodeInstance::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_getnodeinstance_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.GetNodeInstance RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.RunLeaderElection() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_RunLeaderElection::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_runleaderelection_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.RunLeaderElection RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.RunLeaderElection() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_RunLeaderElection::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_runleaderelection_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.RunLeaderElection RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.LeaderStepDown() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_LeaderStepDown::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_leaderstepdown_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.LeaderStepDown RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.LeaderStepDown() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_LeaderStepDown::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_leaderstepdown_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.LeaderStepDown RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.GetLastOpId() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_GetLastOpId::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_getlastopid_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.GetLastOpId RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.GetLastOpId() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_GetLastOpId::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_getlastopid_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.GetLastOpId RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.GetConsensusState() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_GetConsensusState::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_getconsensusstate_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.GetConsensusState RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.GetConsensusState() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_GetConsensusState::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_getconsensusstate_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.GetConsensusState RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.StartTabletCopy() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_StartTabletCopy::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_starttabletcopy_count",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.StartTabletCopy RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.StartTabletCopy() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_StartTabletCopy::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_starttabletcopy_sum",
                    "counter": true,
                    "label": "kudu.consensus.ConsensusService.StartTabletCopy RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletCopyService.BeginTabletCopySession() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletCopyService_BeginTabletCopySession::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletcopyservice_begintabletcopysession_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletCopyService.BeginTabletCopySession RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletCopyService.BeginTabletCopySession() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletCopyService_BeginTabletCopySession::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletcopyservice_begintabletcopysession_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletCopyService.BeginTabletCopySession RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletCopyService.CheckSessionActive() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletCopyService_CheckSessionActive::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletcopyservice_checksessionactive_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletCopyService.CheckSessionActive RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletCopyService.CheckSessionActive() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletCopyService_CheckSessionActive::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletcopyservice_checksessionactive_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletCopyService.CheckSessionActive RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletCopyService.FetchData() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletCopyService_FetchData::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletcopyservice_fetchdata_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletCopyService.FetchData RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletCopyService.FetchData() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletCopyService_FetchData::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletcopyservice_fetchdata_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletCopyService.FetchData RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletCopyService.EndTabletCopySession() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletCopyService_EndTabletCopySession::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletcopyservice_endtabletcopysession_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletCopyService.EndTabletCopySession RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletCopyService.EndTabletCopySession() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletCopyService_EndTabletCopySession::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletcopyservice_endtabletcopysession_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletCopyService.EndTabletCopySession RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.Ping() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_Ping::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_ping_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.Ping RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.Ping() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_Ping::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_ping_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.Ping RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.Write() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_Write::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_write_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.Write RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.Write() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_Write::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_write_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.Write RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.Scan() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_Scan::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_scan_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.Scan RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.Scan() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_Scan::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_scan_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.Scan RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.ScannerKeepAlive() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_ScannerKeepAlive::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_scannerkeepalive_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.ScannerKeepAlive RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.ScannerKeepAlive() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_ScannerKeepAlive::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_scannerkeepalive_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.ScannerKeepAlive RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.ListTablets() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_ListTablets::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_listtablets_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.ListTablets RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.ListTablets() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_ListTablets::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_listtablets_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.ListTablets RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.Checksum() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_Checksum::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_checksum_count",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.Checksum RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.TabletServerService.Checksum() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_tserver_TabletServerService_Checksum::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_tabletserverservice_checksum_sum",
                    "counter": true,
                    "label": "kudu.tserver.TabletServerService.Checksum RPC Time: Total"
                },
                {
                    "numeratorUnit": "hits",
                    "description": "Number of codegen cache hits since start",
                    "context": "code_cache_hits::value",
                    "name": "kudu_code_cache_hits",
                    "counter": true,
                    "label": "Codegen Cache Hits"
                },
                {
                    "numeratorUnit": "queries",
                    "description": "Number of codegen cache queries (hits + misses) since start",
                    "context": "code_cache_queries::value",
                    "name": "kudu_code_cache_queries",
                    "counter": true,
                    "label": "Codegen Cache Queries"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Hybrid clock timestamp.",
                    "context": "hybrid_clock_timestamp::value",
                    "name": "kudu_hybrid_clock_timestamp",
                    "counter": false,
                    "label": "Hybrid Clock Timestamp"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Server clock maximum error.",
                    "context": "hybrid_clock_error::value",
                    "name": "kudu_hybrid_clock_error",
                    "counter": false,
                    "label": "Hybrid Clock Error"
                },
                {
                    "numeratorUnit": "units",
                    "description": "Logical clock timestamp.",
                    "context": "logical_clock_timestamp::value",
                    "name": "kudu_logical_clock_timestamp",
                    "counter": false,
                    "label": "Logical Clock Timestamp"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.server.GenericService.SetFlag() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_SetFlag::total_count",
                    "name": "kudu_handler_latency_kudu_server_genericservice_setflag_count",
                    "counter": true,
                    "label": "kudu.server.GenericService.SetFlag RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.server.GenericService.SetFlag() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_SetFlag::total_sum",
                    "name": "kudu_handler_latency_kudu_server_genericservice_setflag_sum",
                    "counter": true,
                    "label": "kudu.server.GenericService.SetFlag RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.server.GenericService.FlushCoverage() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_FlushCoverage::total_count",
                    "name": "kudu_handler_latency_kudu_server_genericservice_flushcoverage_count",
                    "counter": true,
                    "label": "kudu.server.GenericService.FlushCoverage RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.server.GenericService.FlushCoverage() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_FlushCoverage::total_sum",
                    "name": "kudu_handler_latency_kudu_server_genericservice_flushcoverage_sum",
                    "counter": true,
                    "label": "kudu.server.GenericService.FlushCoverage RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.server.GenericService.ServerClock() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_ServerClock::total_count",
                    "name": "kudu_handler_latency_kudu_server_genericservice_serverclock_count",
                    "counter": true,
                    "label": "kudu.server.GenericService.ServerClock RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.server.GenericService.ServerClock() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_ServerClock::total_sum",
                    "name": "kudu_handler_latency_kudu_server_genericservice_serverclock_sum",
                    "counter": true,
                    "label": "kudu.server.GenericService.ServerClock RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.server.GenericService.SetServerWallClockForTests() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_SetServerWallClockForTests::total_count",
                    "name": "kudu_handler_latency_kudu_server_genericservice_setserverwallclockfortests_count",
                    "counter": true,
                    "label": "kudu.server.GenericService.SetServerWallClockForTests RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.server.GenericService.SetServerWallClockForTests() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_SetServerWallClockForTests::total_sum",
                    "name": "kudu_handler_latency_kudu_server_genericservice_setserverwallclockfortests_sum",
                    "counter": true,
                    "label": "kudu.server.GenericService.SetServerWallClockForTests RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.server.GenericService.GetStatus() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_GetStatus::total_count",
                    "name": "kudu_handler_latency_kudu_server_genericservice_getstatus_count",
                    "counter": true,
                    "label": "kudu.server.GenericService.GetStatus RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.server.GenericService.GetStatus() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_server_GenericService_GetStatus::total_sum",
                    "name": "kudu_handler_latency_kudu_server_genericservice_getstatus_sum",
                    "counter": true,
                    "label": "kudu.server.GenericService.GetStatus RPC Time: Total"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of data blocks currently open for reading",
                    "context": "block_manager_blocks_open_reading::value",
                    "name": "kudu_block_manager_blocks_open_reading",
                    "counter": false,
                    "label": "Data Blocks Open For Read"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of data blocks currently open for writing",
                    "context": "block_manager_blocks_open_writing::value",
                    "name": "kudu_block_manager_blocks_open_writing",
                    "counter": false,
                    "label": "Data Blocks Open For Write"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of data blocks opened for writing since service start",
                    "context": "block_manager_total_writable_blocks::value",
                    "name": "kudu_block_manager_total_writable_blocks",
                    "counter": true,
                    "label": "Data Blocks Opened For Write"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of data blocks opened for reading since service start",
                    "context": "block_manager_total_readable_blocks::value",
                    "name": "kudu_block_manager_total_readable_blocks",
                    "counter": true,
                    "label": "Data Blocks Opened For Read"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Number of bytes of block data written since service start",
                    "context": "block_manager_total_bytes_written::value",
                    "name": "kudu_block_manager_total_bytes_written",
                    "counter": true,
                    "label": "Block Data Bytes Written"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Number of bytes of block data read since service start",
                    "context": "block_manager_total_bytes_read::value",
                    "name": "kudu_block_manager_total_bytes_read",
                    "counter": true,
                    "label": "Block Data Bytes Read"
                },
                {
                    "numeratorUnit": "data directories",
                    "description": "Number of data directories whose disks are currently full",
                    "context": "data_dirs_full::value",
                    "name": "kudu_data_dirs_full",
                    "counter": false,
                    "label": "Data Directories Full"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Number of bytes of data blocks currently under management",
                    "context": "log_block_manager_bytes_under_management::value",
                    "name": "kudu_log_block_manager_bytes_under_management",
                    "counter": false,
                    "label": "Bytes Under Management"
                },
                {
                    "numeratorUnit": "blocks",
                    "description": "Number of data blocks currently under management",
                    "context": "log_block_manager_blocks_under_management::value",
                    "name": "kudu_log_block_manager_blocks_under_management",
                    "counter": false,
                    "label": "Blocks Under Management"
                },
                {
                    "numeratorUnit": "log block containers",
                    "description": "Number of log block containers",
                    "context": "log_block_manager_containers::value",
                    "name": "kudu_log_block_manager_containers",
                    "counter": false,
                    "label": "Number of Block Containers"
                },
                {
                    "numeratorUnit": "log block containers",
                    "description": "Number of full log block containers",
                    "context": "log_block_manager_full_containers::value",
                    "name": "kudu_log_block_manager_full_containers",
                    "counter": false,
                    "label": "Number of Full Block Containers"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.Ping() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_Ping::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_ping_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.Ping RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.Ping() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_Ping::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_ping_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.Ping RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.TSHeartbeat() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_TSHeartbeat::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_tsheartbeat_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.TSHeartbeat RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.TSHeartbeat() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_TSHeartbeat::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_tsheartbeat_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.TSHeartbeat RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.GetTabletLocations() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_GetTabletLocations::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_gettabletlocations_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.GetTabletLocations RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.GetTabletLocations() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_GetTabletLocations::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_gettabletlocations_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.GetTabletLocations RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.CreateTable() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_CreateTable::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_createtable_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.CreateTable RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.CreateTable() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_CreateTable::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_createtable_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.CreateTable RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.IsCreateTableDone() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_IsCreateTableDone::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_iscreatetabledone_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.IsCreateTableDone RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.IsCreateTableDone() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_IsCreateTableDone::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_iscreatetabledone_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.IsCreateTableDone RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.DeleteTable() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_DeleteTable::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_deletetable_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.DeleteTable RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.DeleteTable() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_DeleteTable::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_deletetable_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.DeleteTable RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.AlterTable() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_AlterTable::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_altertable_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.AlterTable RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.AlterTable() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_AlterTable::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_altertable_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.AlterTable RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.IsAlterTableDone() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_IsAlterTableDone::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_isaltertabledone_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.IsAlterTableDone RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.IsAlterTableDone() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_IsAlterTableDone::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_isaltertabledone_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.IsAlterTableDone RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.ListTables() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_ListTables::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_listtables_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.ListTables RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.ListTables() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_ListTables::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_listtables_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.ListTables RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.GetTableLocations() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_GetTableLocations::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_gettablelocations_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.GetTableLocations RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.GetTableLocations() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_GetTableLocations::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_gettablelocations_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.GetTableLocations RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.GetTableSchema() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_GetTableSchema::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_gettableschema_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.GetTableSchema RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.GetTableSchema() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_GetTableSchema::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_gettableschema_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.GetTableSchema RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.ListTabletServers() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_ListTabletServers::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_listtabletservers_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.ListTabletServers RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.ListTabletServers() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_ListTabletServers::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_listtabletservers_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.ListTabletServers RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.ListMasters() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_ListMasters::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_listmasters_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.ListMasters RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.ListMasters() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_ListMasters::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_listmasters_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.ListMasters RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.master.MasterService.GetMasterRegistration() RPC requests. This is the total number of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_GetMasterRegistration::total_count",
                    "name": "kudu_handler_latency_kudu_master_masterservice_getmasterregistration_count",
                    "counter": true,
                    "label": "kudu.master.MasterService.GetMasterRegistration RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.master.MasterService.GetMasterRegistration() RPC requests. This is the total sum of recorded samples.",
                    "context": "handler_latency_kudu_master_MasterService_GetMasterRegistration::total_sum",
                    "name": "kudu_handler_latency_kudu_master_masterservice_getmasterregistration_sum",
                    "counter": true,
                    "label": "kudu.master.MasterService.GetMasterRegistration RPC Time: Total"
                },
                {
                    "numeratorUnit": "messages",
                    "description": "Number of INFO-level log messages emitted by the application.",
                    "context": "glog_info_messages::value",
                    "name": "kudu_glog_info_messages",
                    "counter": true,
                    "label": "INFO-level Log Messages"
                },
                {
                    "numeratorUnit": "messages",
                    "description": "Number of WARNING-level log messages emitted by the application.",
                    "context": "glog_warning_messages::value",
                    "name": "kudu_glog_warning_messages",
                    "counter": true,
                    "label": "WARNING-level Log Messages"
                },
                {
                    "numeratorUnit": "messages",
                    "description": "Number of ERROR-level log messages emitted by the application.",
                    "context": "glog_error_messages::value",
                    "name": "kudu_glog_error_messages",
                    "counter": true,
                    "label": "ERROR-level Log Messages"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Number of bytes used by the application. This will not typically match the memory use reported by the OS, because it does not include TCMalloc overhead or memory fragmentation.",
                    "context": "generic_current_allocated_bytes::value",
                    "name": "kudu_generic_current_allocated_bytes",
                    "counter": false,
                    "label": "Heap Memory Usage"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Bytes of system memory reserved by TCMalloc.",
                    "context": "generic_heap_size::value",
                    "name": "kudu_generic_heap_size",
                    "counter": false,
                    "label": "Reserved Heap Memory"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Number of bytes in free, mapped pages in page heap. These bytes can be used to fulfill allocation requests. They always count towards virtual memory usage, and unless the underlying memory is swapped out by the OS, they also count towards physical memory usage.",
                    "context": "tcmalloc_pageheap_free_bytes::value",
                    "name": "kudu_tcmalloc_pageheap_free_bytes",
                    "counter": false,
                    "label": "Free Heap Memory"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "Number of bytes in free, unmapped pages in page heap. These are bytes that have been released back to the OS, possibly by one of the MallocExtension \"Release\" calls. They can be used to fulfill allocation requests, but typically incur a page fault. They always count towards virtual memory usage, and depending on the OS, typically do not count towards physical memory usage.",
                    "context": "tcmalloc_pageheap_unmapped_bytes::value",
                    "name": "kudu_tcmalloc_pageheap_unmapped_bytes",
                    "counter": false,
                    "label": "Unmapped Heap Memory"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "A limit to how much memory TCMalloc dedicates for small objects. Higher numbers trade off more memory use for -- in some situations -- improved efficiency.",
                    "context": "tcmalloc_max_total_thread_cache_bytes::value",
                    "name": "kudu_tcmalloc_max_total_thread_cache_bytes",
                    "counter": false,
                    "label": "Thread Cache Memory Limit"
                },
                {
                    "numeratorUnit": "bytes",
                    "description": "A measure of some of the memory TCMalloc is using (for small objects).",
                    "context": "tcmalloc_current_total_thread_cache_bytes::value",
                    "name": "kudu_tcmalloc_current_total_thread_cache_bytes",
                    "counter": false,
                    "label": "Thread Cache Memory Usage"
                },
                {
                    "numeratorUnit": "scanners",
                    "description": "Number of scanners that have expired since service start",
                    "context": "scanners_expired::value",
                    "name": "kudu_scanners_expired",
                    "counter": true,
                    "label": "Scanners Expired"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Histogram of the duration of active scanners on this tablet. This is the total number of recorded samples.",
                    "context": "scanner_duration::total_count",
                    "name": "kudu_scanner_duration_count",
                    "counter": true,
                    "label": "Scanner Duration: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Histogram of the duration of active scanners on this tablet. This is the total sum of recorded samples.",
                    "context": "scanner_duration::total_sum",
                    "name": "kudu_scanner_duration_sum",
                    "counter": true,
                    "label": "Scanner Duration: Total"
                },
                {
                    "numeratorUnit": "scanners",
                    "description": "Number of scanners that are currently active",
                    "context": "active_scanners::value",
                    "name": "kudu_active_scanners",
                    "counter": false,
                    "label": "Active Scanners"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Number of operations waiting to be applied to the tablet. High queue lengths indicate that the server is unable to process operations as fast as they are being written to the WAL. This is the total number of recorded samples.",
                    "context": "op_apply_queue_length::total_count",
                    "name": "kudu_op_apply_queue_length_count",
                    "counter": true,
                    "label": "Operation Apply Queue Length: Samples"
                },
                {
                    "numeratorUnit": "tasks",
                    "description": "Number of operations waiting to be applied to the tablet. High queue lengths indicate that the server is unable to process operations as fast as they are being written to the WAL. This is the total sum of recorded samples.",
                    "context": "op_apply_queue_length::total_sum",
                    "name": "kudu_op_apply_queue_length_sum",
                    "counter": true,
                    "label": "Operation Apply Queue Length: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Time that operations spent waiting in the apply queue before being processed. High queue times indicate that the server is unable to process operations as fast as they are being written to the WAL. This is the total number of recorded samples.",
                    "context": "op_apply_queue_time::total_count",
                    "name": "kudu_op_apply_queue_time_count",
                    "counter": true,
                    "label": "Operation Apply Queue Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Time that operations spent waiting in the apply queue before being processed. High queue times indicate that the server is unable to process operations as fast as they are being written to the WAL. This is the total sum of recorded samples.",
                    "context": "op_apply_queue_time::total_sum",
                    "name": "kudu_op_apply_queue_time_sum",
                    "counter": true,
                    "label": "Operation Apply Queue Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Time that operations spent being applied to the tablet. High values may indicate that the server is under-provisioned or that operations consist of very large batches. This is the total number of recorded samples.",
                    "context": "op_apply_run_time::total_count",
                    "name": "kudu_op_apply_run_time_count",
                    "counter": true,
                    "label": "Operation Apply Run Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Time that operations spent being applied to the tablet. High values may indicate that the server is under-provisioned or that operations consist of very large batches. This is the total sum of recorded samples.",
                    "context": "op_apply_run_time::total_sum",
                    "name": "kudu_op_apply_run_time_sum",
                    "counter": true,
                    "label": "Operation Apply Run Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.StartRemoteBootstrap() RPC requests. This is the total number of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_StartRemoteBootstrap::total_count",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_startremotebootstrap_count",
                    "counter": true,
                    "label": "DEPRECATED: kudu.consensus.ConsensusService.StartRemoteBootstrap RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.consensus.ConsensusService.StartRemoteBootstrap() RPC requests. This is the total sum of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_consensus_ConsensusService_StartRemoteBootstrap::total_sum",
                    "name": "kudu_handler_latency_kudu_consensus_consensusservice_startremotebootstrap_sum",
                    "counter": true,
                    "label": "DEPRECATED: kudu.consensus.ConsensusService.StartRemoteBootstrap RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.RemoteBootstrapService.FetchData() RPC requests. This is the total number of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_tserver_RemoteBootstrapService_FetchData::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_remotebootstrapservice_fetchdata_count",
                    "counter": true,
                    "label": "DEPRECATED: kudu.tserver.RemoteBootstrapService.FetchData RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.RemoteBootstrapService.FetchData() RPC requests. This is the total sum of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_tserver_RemoteBootstrapService_FetchData::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_remotebootstrapservice_fetchdata_sum",
                    "counter": true,
                    "label": "DEPRECATED: kudu.tserver.RemoteBootstrapService.FetchData RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.RemoteBootstrapService.CheckSessionActive() RPC requests. This is the total number of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_tserver_RemoteBootstrapService_CheckSessionActive::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_remotebootstrapservice_checksessionactive_count",
                    "counter": true,
                    "label": "DEPRECATED: kudu.tserver.RemoteBootstrapService.CheckSessionActive RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.RemoteBootstrapService.CheckSessionActive() RPC requests. This is the total sum of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_tserver_RemoteBootstrapService_CheckSessionActive::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_remotebootstrapservice_checksessionactive_sum",
                    "counter": true,
                    "label": "DEPRECATED: kudu.tserver.RemoteBootstrapService.CheckSessionActive RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.RemoteBootstrapService.EndRemoteBootstrapSession() RPC requests. This is the total number of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_tserver_RemoteBootstrapService_EndRemoteBootstrapSession::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_remotebootstrapservice_endremotebootstrapsession_count",
                    "counter": true,
                    "label": "DEPRECATED: kudu.tserver.RemoteBootstrapService.EndRemoteBootstrapSession RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.RemoteBootstrapService.EndRemoteBootstrapSession() RPC requests. This is the total sum of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_tserver_RemoteBootstrapService_EndRemoteBootstrapSession::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_remotebootstrapservice_endremotebootstrapsession_sum",
                    "counter": true,
                    "label": "DEPRECATED: kudu.tserver.RemoteBootstrapService.EndRemoteBootstrapSession RPC Time: Total"
                },
                {
                    "numeratorUnit": "samples",
                    "description": "Microseconds spent handling kudu.tserver.RemoteBootstrapService.BeginRemoteBootstrapSession() RPC requests. This is the total number of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_tserver_RemoteBootstrapService_BeginRemoteBootstrapSession::total_count",
                    "name": "kudu_handler_latency_kudu_tserver_remotebootstrapservice_beginremotebootstrapsession_count",
                    "counter": true,
                    "label": "DEPRECATED: kudu.tserver.RemoteBootstrapService.BeginRemoteBootstrapSession RPC Time: Samples"
                },
                {
                    "numeratorUnit": "microseconds",
                    "description": "Microseconds spent handling kudu.tserver.RemoteBootstrapService.BeginRemoteBootstrapSession() RPC requests. This is the total sum of recorded samples. This metric is no longer produced in current versions of Kudu.",
                    "context": "handler_latency_kudu_tserver_RemoteBootstrapService_BeginRemoteBootstrapSession::total_sum",
                    "name": "kudu_handler_latency_kudu_tserver_remotebootstrapservice_beginremotebootstrapsession_sum",
                    "counter": true,
                    "label": "DEPRECATED: kudu.tserver.RemoteBootstrapService.BeginRemoteBootstrapSession RPC Time: Total"
                }
            ],
            "nameForCrossEntityAggregateMetrics": "kudu_masters",
            "name": "KUDU_MASTER"
        }
    ],
    "metricEntityAttributeDefinitions": [
        {
            "valueCaseSensitive": false,
            "description": "UUID for Kudu Table.",
            "name": "kuduTableId",
            "label": "Table ID"
        },
        {
            "valueCaseSensitive": true,
            "description": "Name for Kudu Table.",
            "name": "kuduTableName",
            "label": "Table Name"
        },
        {
            "valueCaseSensitive": false,
            "description": "State for Kudu Table.",
            "name": "kuduTableState",
            "label": "Table State"
        },
        {
            "valueCaseSensitive": false,
            "description": "UUID for Kudu Tablet.",
            "name": "kuduTabletId",
            "label": "Tablet ID"
        },
        {
            "valueCaseSensitive": false,
            "description": "State for Kudu Tablet.",
            "name": "kuduTabletState",
            "label": "Tablet State"
        }
    ],
    "nameForCrossEntityAggregateMetrics": "kudus",
    "metricDefinitions": []
}